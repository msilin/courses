Michael Silin Exercise 9 Section 9


1. source : main.c - This file will contain a structure which will be passed to UI.c and game.c. The structure will contain all of the pertinent game information, such as number of guesses, the seed value, the max letter, and the game's correct answer, and MAYBE the guess number(not sure about this one yet). The main.c file will run the functions from UI.c and game.c 
            
            UI.c - This program will include all of the functions which will be used to parse information from the user. Such functions include setting up the main structure by asking the seed value, number of lines, etc. It will not initialize the game board. It will also include a function to parse the user's guesses. 

            game.c - This program will take the structure which was defined in main.c(but the values were initialized in UI.c) and it will determine if the user's guess is correct or not. It will also contain a function to initialize the game's correct answer(which will be in the same structure, lets just call it struct board for now ).  

   header : UI.h - int askSeed(struct* board), int askGuesses(struct* board), int askMaxLetter(struct* board), int askPosition(struct* board), int guess(struct* board), void gameOver(int guessNumber, int winOrLose)
   game.h : void setupBoard(struct* board), checkGuess(struct* board, char* guess)

2. The structure will contain all of the pertinent game information, such as number of guesses, the seed value, the max letter, and the game's correct answer, and MAYBE the guess number(not sure about this one yet).

typedef struct{

int numGuesses;
int seed;
char maxLetter;
char[10] correctAnswer;

} board 

3. 
int askSeed(struct* board) - ask user for seed number, pass it to struct

int askGuesses(struct* board) - ask user for guess number, pass it to struct
int askMaxLetter(struct* board) - ask user for ma letter, pass it to struct
int askPosition(struct* board) - ask user for nubmer of positions, pass it to struct
int guess(struct* board) - ask user for their guess, call checkGuess function, (will be careful passing their input into second function to avoid problem explained in class)
void gameOver(int guessNumber, int winOrLose) ( print results if user won or lost) 
